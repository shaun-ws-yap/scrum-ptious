{"version":3,"sources":["helpers/taskStatus.js","components/Dashboard/ProjectProgress.js","helpers/filterTasksByLastThreeMonths.js","components/Dashboard/IndependentProgress.js","components/Dashboard/EmployeeProgressItem.js","components/Dashboard/EmployeeProgress.js","components/Dashboard/index.js","helpers/getUserNameById.js","helpers/getTaskStatus.js","components/Tasks/ManagerModal.js","components/Tasks/FeedbackList.js","components/Tasks/EmployeeModal.js","components/Tasks/TaskItem.js","components/Tasks/TaskProgress.js","helpers/sortTasks.js","helpers/findTaskItemById.js","components/Tasks/MyTeamItem.js","components/Tasks/MyTeam.js","helpers/filterTasksByUser.js","components/Tasks/index.js","components/Chat/ChatLogItem.js","helpers/getUserById.js","components/Chat/ChatLog.js","components/Chat/MembersListItem.js","components/Chat/MembersList.js","components/Chat/InputBox.js","components/Chat/index.js","hooks/useChat.js","utilities/format-date.js","helpers/getEmployeeName.js","components/Submissions/Feedback.js","components/Submissions/SubmissionItem.js","components/Submissions/SubmissionList.js","components/Submissions/index.js","components/Sidebar/SidebarItem.js","components/Tasks/NewTaskItem.js","components/Sidebar/index.js","components/UserPanel/DeadlineListItem.js","components/UserPanel/DeadlineList.js","helpers/filterDeadlineTasks.js","components/UserPanel/UserInfo.js","components/UserPanel/index.js","components/Login/index.js","components/App.js","hooks/useSocket.js","hooks/useApplicationData.js","hooks/useNotifications.js","hooks/useTasks.js","helpers/findSubmissionByTask.js","index.js"],"names":["taskStatus","status","data","counter","lateTaskStatus","index","is_late","ProjectProgress","props","assignedTasks","teamTasks","inProgressTasks","inReviewTasks","completeTasks","lateTasks","className","labels","datasets","label","backgroundColor","borderColor","hoverBackgroundColor","borderWidth","hoverBorderWidth","height","width","options","maintainAspectRatio","title","display","text","fontSize","fontFamily","legend","position","filterTasksByLastThreeMonths","tasks","userId","monthNames","filteredTasks","i","today","Date","setMonth","getMonth","assigned","inprogress","inreview","completed","late","task","monthCreated","due_date","month","employee_id","IndependentProgress","independentTasks","lastThreeMonths","userInfo","id","Object","keys","dataset","key","res","complete","borderCapStyle","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointHoverBackgroundColor","hoverPointBorderWidth","spanGaps","fill","push","scales","yAxes","ticks","beginAtZero","gridLines","color","xAxes","responsive","angleLines","EmployeeProgress","inProgress","inReview","name","scale","useState","tabIndex","setTabIndex","userData","teamUsers","filter","user","role","map","taskData","team","empID","result","projecttask_id","teamTaskStatus","team_id","defaultIndex","onSelect","Dashboard","getUserNameById","find","getTaskStatus","type","ManagerModal","taskItem","show","handleClose","editTaskItem","deleteTaskItem","description","editMode","setEditMode","newTaskData","setNewTaskData","taskInfo","assignNewUserList","validate","NotificationManager","warning","document","getElementById","focus","Modal","onHide","Header","closeButton","Title","Body","local","format","autofocus","value","onChange","event","prev","target","selected","item","locale","showTimeInput","date","tmp","toISOString","onDateChange","dateFormat","Footer","Button","onClick","variant","confirm","FeedbackList","feedbackItems","tid","feedbacks","reverse","feedback","task_id","filterFeedbackByTask","taskId","feedback_string","submission_date","EmployeeModal","submissions","submitTaskItem","success","TaskItem","error","setError","creation_date","setShow","taskClass","classNames","onSubmit","preventDefault","TaskProgress","setErrorNotification","moveTask","sortedTasks","setSortedTasks","trashVisible","setTrashVisible","useEffect","updated","toReturn","sortTasks","sortedComponents","draggable","draggableId","isDragDisabled","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","onDragEnd","destination","source","findTaskItemById","Number","droppableId","onBeforeCapture","style","isDraggingOver","droppableProps","placeholder","MyTeamItem","member","selectTasksByUser","avatar","src","alt","MyTeam","teamMembers","filterTasksByUser","uid","Tasks","setTasks","selectedTasks","setSelectedTasks","userTasks","ChatLogItem","senderId","sender","message","time_locale","chatItemClass","getUserById","ChatLog","messages","chatInfo","getPrevMessages","visible","setVisible","page","setPage","loader","useRef","container","handleObserver","entities","isIntersecting","observer","IntersectionObserver","root","rootMargin","threshold","current","observe","setTimeout","chatBottomClass","expanded","messageComponents","messageData","sender_id","time_iso","MembersListItem","online","imgClass","itemClass","roles","MembersList","onlineUsers","memberComponents","includes","InputBox","sendMessage","setMessage","submitForm","e","autoComplete","onKeyPress","Chat","socket","setMessages","setOnlineUsers","joinMessage","setJoinMessage","emit","lastMsg","length","getLastMessageTime","on","users","username","messagesData","off","now","toLocaleDateString","day","year","toLocaleTimeString","undefined","hour","minute","useChat","getEmployeeName","Feedback","selectedTask","giveFeedback","setUserNotification","setFeedback","handleSubmit","accepted","SubmissionItem","setSelectedTask","SubmisionList","listedTeamTasks","is_viewed","Submissions","SidebarItem","menuClass","setMenu","NewTaskItem","dateNow","setDate","getDate","setHours","setMinutes","createTaskItem","setTaskItem","teamMembersList","onEntered","prevTaskItem","defaultValue","Sidebar","selectedMenu","menuItems","DeadlineListItem","assignedTo","DeadlineList","deadlines","filteredUserDeadlinesByUser","filteredUserDeadlines","filterDeadlineTasks","getTime","1","2","UserInfo","transparent","openFilter","setOpenFilter","state","classList","toggle","href","rel","UserPanel","openPanel","setOpenPanel","isOpen","size","Login","setLogin","loginId","setLoginId","DASHBOARD","App","loginToken","setLoginToken","errorNotification","setSocket","conn","io","close","useSocket","setState","loginData","console","log","logout","setSubmissions","shouldAppend","useApplicationData","userNotification","managerNotification","setManagerNotification","info","useNotifications","TASK_STATUS","userToAlert","op","STATUS","toSubmit","submitTaskData","submission","findSubmissionByTask","useTasks","ReactDOM","render"],"mappings":"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","file":"static/js/main.15c907c8.chunk.js","sourcesContent":["export function taskStatus (status, data) {\n  let counter = 0;\n\n  for (const index of data) {\n    if (index.status === status) {\n      counter += 1\n    }\n  }\n\n  return counter;\n}\n\nexport function lateTaskStatus (data) {\n  let counter = 0;\n\n  for (const index of data) {\n    if (index.is_late === true && index.status !== 3) {\n      counter += 1;\n    }\n  }\n\n  return counter;\n}\n\nexport function teamTaskStatus (data, team, empID) {\n  let result = {\n    assigned: 0,\n    inProgress: 0,\n    inReview: 0,\n    late: 0,\n    complete: 0\n  };\n\n  for (const index of data) {\n    if (index.projecttask_id === team && index.employee_id === empID) {\n      if (index.status === 0) {\n        result.assigned += 1\n      } else if (index.status === 1) {\n        result.inProgress += 1;\n      } else if (index.status === 2) {\n        result.inReview += 1;\n      } else if (index.status === 3) {\n        result.complete += 1;\n      }\n      if (index.is_late === true && index.status !== 3) {\n        result.late += 1;\n      }\n    }\n  }\n\n  return result;\n}\n\n\nexport function changeTaskStatus (data) {\n\n  data.status += 1;\n  return data;\n\n}\n","import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { taskStatus, lateTaskStatus } from '../../helpers/taskStatus';\n\n// import ProjectProgressListItem from './ProjectProgressListItem';\n\nexport default function ProjectProgress(props) {\n\n  const assignedTasks = taskStatus(0, props.teamTasks);\n  const inProgressTasks = taskStatus(1, props.teamTasks);\n  const inReviewTasks = taskStatus(2, props.teamTasks);\n  const completeTasks = taskStatus(3, props.teamTasks);\n  const lateTasks = lateTaskStatus(props.teamTasks);\n\n\n  return (\n    <div className=\"project-progress\">\n      <Doughnut\n        data={{\n          labels: ['Assigned', 'In-progress', 'In-review', 'Late', 'Complete'],\n          datasets: [\n            {\n              label: '# of tasks',\n              data: [assignedTasks, inProgressTasks, inReviewTasks, lateTasks, completeTasks],\n              backgroundColor: [\n                'rgba(61, 173, 209, 0.65)',\n                'rgba(92, 92, 183, 0.65)',\n                'rgba(255, 181, 75, 0.65)',\n                'rgba(212, 0, 17, 0.65)',\n                'rgba(148, 203, 179, 0.65)',\n              ],\n              borderColor: [\n                'rgba(61, 173, 209, 1)',\n                'rgba(92, 92, 183, 1)',\n                'rgba(255, 181, 75, 1)',\n                'rgba(212, 0, 17, 1)',\n                'rgba(148, 203, 179, 1)',\n              ],\n              hoverBackgroundColor: [\n                'rgba(61, 173, 209, 0.85)',\n                'rgba(92, 92, 183, 0.85)',\n                'rgba(255, 181, 75, 0.85)',\n                'rgba(212, 0, 17, 0.85)',\n                'rgba(148, 203, 179, 0.85)',\n              ],\n              borderWidth: 1,\n              hoverBorderWidth: 2,\n            }\n          ],\n        }}\n        height={400}\n        width={600}\n        options={{\n          maintainAspectRatio: false,\n          title: {\n            display: true,\n            text: 'Project Progress',\n            fontSize: 30,\n            fontFamily: 'Poppins',\n          },\n          legend: {\n            display: true,\n            position: 'bottom'\n          }\n        }}\n      />\n    </div>\n  )\n}","export default function filterTasksByLastThreeMonths(tasks, userId) {\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n  const status = [\"assigned\", \"inprogress\", \"inreview\", \"completed\"];\n\n  const filteredTasks = {};\n\n  for (let i = 2; i >= 0; i--) {\n    const today = new Date();\n\n    today.setMonth(today.getMonth() - i);\n    const monthName = monthNames[today.getMonth()];\n    filteredTasks[monthName] = {\n      assigned: 0,\n      inprogress: 0,\n      inreview: 0,\n      completed: 0,\n      late: 0,\n    };\n  }\n\n  for (const task of tasks) {\n    const monthCreated = monthNames[new Date(task.due_date).getMonth()];\n    \n    for (const month in filteredTasks) {\n      if (month === monthCreated && task.employee_id === userId) {\n        filteredTasks[month][status[task.status]] += 1;\n\n        if (task.is_late) {\n          filteredTasks[month].late++;\n        }\n      }\n    }\n  }\n  return filteredTasks;\n}","import React from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport { taskStatus, lateTaskStatus } from '../../helpers/taskStatus';\nimport filterTasksByLastThreeMonths from '../../helpers/filterTasksByLastThreeMonths';\n\nexport default function IndependentProgress(props) {\n\n  const assignedTasks = taskStatus(0, props.independentTasks);\n  const inProgressTasks = taskStatus(1, props.independentTasks);\n  const inReviewTasks = taskStatus(2, props.independentTasks);\n  const completeTasks = taskStatus(3, props.independentTasks);\n  const lateTasks = lateTaskStatus(props.independentTasks);\n\n  const lastThreeMonths = filterTasksByLastThreeMonths(props.independentTasks, props.userInfo.id);\n  const month = Object.keys(lastThreeMonths);\n  const dataset = [];\n\n  for (let i = 0; i < 3; i++) {\n    const key = lastThreeMonths[month[i]];\n\n    if (!key) {\n      continue; \n    }\n    \n    const res = {\n      label: month[i],\n      data: [key.assigned, key.inprogress, key.inreview, key.late, key.complete],\n    }\n    if (i === 0) {\n      res.backgroundColor = 'rgba(151, 229, 215, 0.3)'\n      res.borderColor = 'rgba(151, 229, 215, 1)';\n      res.hoverBackgroundColor = 'rgba(151, 229, 215, 1)';\n      res.borderCapStyle = 'butt';\n      res.pointBackgroundColor = 'white';\n      res.pointBorderColor = 'rgba(151, 229, 215, 1)';\n      res.pointBorderWidth = '2px';\n      res.pointHoverBackgroundColor = 'rgba(151, 229, 215, 1)';\n      res.hoverPointBorderWidth = '4px';\n      res.spanGaps = true;\n      res.fill = false;\n    }\n    if (i === 1) {\n      res.backgroundColor = 'rgba(252, 241, 221, 0.3)';\n      res.borderColor = 'rgba(252, 241, 221, 1)';\n      res.hoverBackgroundColor = 'rgba(252, 241, 221, 1)';\n      res.borderCapStyle = 'butt';\n      res.pointBackgroundColor = 'white';\n      res.pointBorderColor = 'rgba(252, 241, 221, 1)';\n      res.pointBorderWidth = '2px';\n      res.pointHoverBackgroundColor = 'rgba(252, 241, 221, 1)';\n      res.hoverPointBorderWidth = '4px';\n      res.spanGaps = true;\n      res.fill = false;\n    }\n    if (i === 2) {\n      res.backgroundColor = 'rgba(254, 183, 179, 0.3)';\n      res.borderColor = 'rgba(254, 183, 179, 1)';\n      res.hoverBackgroundColor = 'rgba(254, 183, 179, 1)';\n      res.borderCapStyle = 'butt';\n      res.pointBackgroundColor = 'white';\n      res.pointBorderColor = 'rgba(254, 183, 179, 1)';\n      res.pointBorderWidth = '2px';\n      res.pointHoverBackgroundColor = 'rgba(254, 183, 179, 1)';\n      res.hoverPointBorderWidth = '4px';\n      res.spanGaps = true;\n      res.fill = false;\n    }\n    dataset.push(res);\n  }\n\n  return (\n    <div className=\"employee-chart\">\n\n      {/* stack em against others */}\n      <div className=\"independent-progress\">\n        <div className=\"bar-chart\">\n          <Bar\n            data={{\n              labels: ['Assigned', 'In-progress', 'In-review', 'Late', 'Complete'],\n              datasets: [\n                {\n                  label: '# of tasks',\n                  data: [assignedTasks, inProgressTasks, inReviewTasks, lateTasks, completeTasks],\n                  backgroundColor: [\n                    'rgba(61, 173, 209, 0.2)',\n                    'rgba(92, 92, 183, 0.2)',\n                    'rgba(255, 181, 75, 0.2)',\n                    'rgba(212, 0, 17, 0.2)',\n                    'rgba(148, 203, 179, 0.2)',\n                  ],\n                  borderColor: [\n                    'rgba(61, 173, 209, 1)',\n                    'rgba(92, 92, 183, 1)',\n                    'rgba(255, 181, 75, 1)',\n                    'rgba(212, 0, 17, 1)',\n                    'rgba(148, 203, 179, 1)',\n                  ],\n                  hoverBackgroundColor: [\n                    'rgba(61, 173, 209, 0.5)',\n                    'rgba(92, 92, 183, 0.5)',\n                    'rgba(255, 181, 75, 0.5)',\n                    'rgba(212, 0, 17, 0.5)',\n                    'rgba(148, 203, 179, 0.5)',\n                  ],\n                  borderWidth: 1,\n                  hoverBorderWidth: 2,\n                },\n              ],\n            }}\n            height={400}\n            width={600}\n            options={{\n              maintainAspectRatio: false,\n              title: {\n                display: true,\n                text: 'Your Current Progress',\n                fontSize: 25,\n                fontFamily: 'Poppins'\n              },\n              legend: {\n                display: true,\n                position: 'right'\n              },\n              scales: {\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true\n                  },\n                  gridLines: {\n                    color: \"rgba(0, 0, 0, 0)\"\n                  }\n                }],\n                xAxes: [{\n                  gridLines: {\n                    color: \"rgba(0, 0, 0, 0)\"\n                  }\n                }]\n              }\n            }}\n          />\n        </div>\n\n        <div className=\"line-chart\">\n          <Line \n            data={{\n              labels: ['Assigned', 'In-progress', 'In-review', 'Late', 'Complete'],\n              datasets: dataset,\n            }}\n            height={400}\n            width={600}\n            options={{\n              responsive: true,\n              maintainAspectRatio: false,\n              title: {\n                display: true,\n                text: 'Your Past 3 Months',\n                fontSize: 25,\n                fontFamily: 'Poppins'\n              },\n              legend: {\n                display: true,\n                position: 'right'\n              },\n              scales: {\n                angleLines: {\n                  display: false,\n                },\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true,\n                  },\n                  gridLines: {\n                    color: \"rgba(0, 0, 0, 0)\"\n                  }\n                }],\n                xAxes: [{\n                  gridLines: {\n                    color: \"rgba(0, 0, 0, 0)\"\n                  }\n                }]\n              }\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react';\n \nimport { Doughnut, Radar } from 'react-chartjs-2';\nimport filterTasksByLastThreeMonths from '../../helpers/filterTasksByLastThreeMonths';\n \nexport default function EmployeeProgress(props) {\n \n  const lastThreeMonths = filterTasksByLastThreeMonths(props.teamTasks, props.id);\n  const month = Object.keys(lastThreeMonths);\n  const dataset = [];\n\n  for (let i = 0; i < 3; i++) {\n    const key = lastThreeMonths[month[i]];\n    \n    if (!key) {\n      continue; \n    }\n    \n    const res = {\n      label: month[i],\n      data: [key.assigned, key.inprogress, key.inreview, key.late, key.complete],\n    }\n    if (i === 0) {\n      res.backgroundColor = 'rgba(212, 99, 78, 0.3)'\n      res.borderColor = 'rgba(212, 99, 78, 1)';\n      res.hoverBackgroundColor = 'rgba(212, 99, 78, 1)';\n      res.borderCapStyle = 'butt';\n      res.pointBackgroundColor = 'white';\n      res.pointBorderColor = 'rgba(212, 99, 78, 1)';\n      res.pointBorderWidth = '2px';\n      res.pointHoverBackgroundColor = 'rgba(212, 99, 78, 1)';\n      res.hoverPointBorderWidth = '2px';\n      res.spanGaps = true;\n      res.borderWidth = '4px';\n    }\n    if (i === 1) {\n      res.backgroundColor = 'rgba(255, 132, 191, 0.3)';\n      res.borderColor = 'rgba(255, 132, 191, 1)';\n      res.hoverBackgroundColor = 'rgba(255, 132, 191, 1)';\n      res.borderCapStyle = 'butt';\n      res.pointBackgroundColor = 'white';\n      res.pointBorderColor = 'rgba(255, 132, 191, 1)';\n      res.pointBorderWidth = '2px';\n      res.pointHoverBackgroundColor = 'rgba(255, 132, 191, 1)';\n      res.hoverPointBorderWidth = '2px';\n      res.spanGaps = true;\n      res.borderWidth = '4px';\n    }\n    if (i === 2) {\n      res.backgroundColor = 'rgba(22, 53, 83, 0.3)';\n      res.borderColor = 'rgba(22, 53, 83, 1)';\n      res.hoverBackgroundColor = 'rgba(22, 53, 83, 1)';\n      res.borderCapStyle = 'butt';\n      res.pointBackgroundColor = 'white';\n      res.pointBorderColor = 'rgba(22, 53, 83, 1)';\n      res.pointBorderWidth = '2px';\n      res.pointHoverBackgroundColor = 'rgba(22, 53, 83, 1)';\n      res.hoverPointBorderWidth = '4px';\n      res.spanGaps = true;\n      res.borderWidth = '4px';\n    }\n    dataset.push(res);\n  }\n\n  return (\n    <div className=\"employee-progress\">\n      <div className=\"pie-chart\">\n        <Doughnut\n          data={{\n            labels: ['Assigned', 'In-progress', 'In-review', 'Late', 'Complete'],\n            datasets: [\n              {\n                label: '# of tasks',\n                data: [props.assigned, props.inProgress, props.inReview, props.late, props.complete],\n                backgroundColor: [\n                  'rgba(61, 173, 209, 0.65)',\n                  'rgba(92, 92, 183, 0.65)',\n                  'rgba(255, 181, 75, 0.65)',\n                  'rgba(212, 0, 17, 0.65)',\n                  'rgba(148, 203, 179, 0.65)',\n                ],\n                borderColor: [\n                  'rgba(61, 173, 209, 1)',\n                  'rgba(92, 92, 183, 1)',\n                  'rgba(255, 181, 75, 1)',\n                  'rgba(212, 0, 17, 1)',\n                  'rgba(148, 203, 179, 1)',\n                ],\n                hoverBackgroundColor: [\n                  'rgba(61, 173, 209, 0.85)',\n                  'rgba(92, 92, 183, 0.85)',\n                  'rgba(255, 181, 75, 0.85)',\n                  'rgba(212, 0, 17, 0.85)',\n                  'rgba(148, 203, 179, 0.85)',\n                ],\n                borderWidth: 1,\n                hoverBorderWidth: 2,\n              }\n            ],\n          }}\n          height={400}\n          width={600}\n          options={{\n            responsive: true,\n            maintainAspectRatio: false,\n            title: {\n              display: false,\n              text: props.name,\n              fontSize: 25,\n              fontFamily: 'Poppins'\n            },\n            legend: {\n              display: true,\n              position: 'left'\n            }\n          }}\n        />\n      </div>\n\n      <div className=\"radar-chart\">\n        <Radar\n          data={{\n            labels: ['Assigned', 'In-progress', 'In-review', 'Late', 'Complete'],\n            datasets: dataset\n          }}\n          height={400}\n          width={600}\n          options={{\n            responsive: true,\n            maintainAspectRatio: false,\n            title: {\n              display: false,\n              text: props.name,\n              fontSize: 25,\n              fontFamily: 'Poppins'\n            },\n            legend: {\n              display: true,\n              position: 'right'\n            },\n            scale: {\n              angleLines: {\n                display: false,\n              },\n              ticks: {\n                beginAtZero: true,\n              }\n            }\n          }}\n        />\n      </div>\n\n      \n    </div>\n  )\n}","import React, { useState } from 'react';\nimport { Tabs, Tab, TabList, TabPanel } from 'react-tabs';\n\nimport EmployeeProgressItem from './EmployeeProgressItem';\nimport { teamTaskStatus } from '../../helpers/taskStatus';\n\nexport default function EmployeeProgress(props) {\n  const [tabIndex, setTabIndex] = useState(0);\n  \n  const userData = props.teamUsers.filter(user => user.role !== 1).map((user) => {\n    const taskData = teamTaskStatus(props.teamTasks, user.team_id, user.id);\n\n    return (\n      <TabPanel key={user.id}>\n        <EmployeeProgressItem\n          teamTasks={props.teamTasks}\n          key={user.id}\n          id={user.id}\n          name={user.name}\n          assigned={taskData.assigned}\n          inProgress={taskData.inProgress}\n          inReview={taskData.inReview}\n          late={taskData.late}\n          complete={taskData.complete}\n        />\n      </TabPanel>\n    )\n  })\n\n  return (\n    <Tabs defaultIndex={0} onSelect={index => setTabIndex(tabIndex)} className=\"employee-chart\" >\n      <TabList>\n        { props.teamUsers.filter(user => user.role !== 1).map(user => {\n          return (\n            <Tab key={user.id}>{user.name}</Tab>\n          )\n        }) }\n      </TabList>\n      { userData }\n    </Tabs>\n  )\n}","import React from 'react';\n\nimport ProjectProgress from './ProjectProgress';\nimport IndependentProgress from './IndependentProgress';\nimport EmployeeProgress from './EmployeeProgress';\n\nimport '../../styles/Dashboard.css';\n\nexport default function Dashboard(props) {\n  const { tasks, teamTasks, teamUsers, role, userInfo } = props;\n\n  return (\n    <div className='dashboard'>\n      <div className=\"dashboard-top\">\n        <ProjectProgress teamTasks={teamTasks} />\n      </div>\n      <div className=\"dashboard-bottom\">\n      {role === 1 && <EmployeeProgress independentTasks={tasks} teamTasks={teamTasks} teamUsers={teamUsers} />}\n      {role === 2 && <IndependentProgress independentTasks={tasks} userInfo={userInfo} />}\n      </div>\n    </div>\n  )\n}","export default function getUserNameById(teamUsers, id) {\n  return teamUsers.find(user => user.id === id).name;\n}","export default function getTaskStatus(status) {\n  switch(status) {\n    case 0: \n      return { status: \"Assigned\", type: \"info\" }\n    case 1:\n      return { status: \"In Progress\", type: \"primary\" }\n    case 2:\n      return { status: \"In Review\", type: \"warning\" }\n    case 3:\n      return { status: \"Completed\", type: \"success\" }\n    default:\n      break;\n  }\n}","import React, { useState } from 'react';\n\nimport { Modal, Button } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport { NotificationManager } from 'react-notifications'; \nimport getTaskStatus from '../../helpers/getTaskStatus';\n\nexport default function ManagerModal(props) {\n  const {\n    teamUsers,\n    taskItem,\n    show,\n    handleClose,\n    editTaskItem,\n    deleteTaskItem,\n  } = props;\n\n  const { \n    employee_id, \n    title, \n    description, \n    due_date,\n    status,\n    is_late\n  } = taskItem;\n\n  const [editMode, setEditMode] = useState(false);\n  const [newTaskData, setNewTaskData] = useState(taskItem);\n  const taskInfo = getTaskStatus(status);\n\n  function reset() {\n    setEditMode(false);\n  }\n\n  const handleDelete = () => {\n    deleteTaskItem(taskItem);\n    handleClose();\n  };\n\n  const handleEditToggle = () => {\n    editMode ? setEditMode(false) : setEditMode(true);\n  }\n\n  const assignNewUserList = teamUsers.filter(user => user.id !== employee_id && user.role !== 1);\n\n  const onDateChange = (date) => {\n    const tmp = new Date(date).toISOString();\n    setNewTaskData(prev => ({...prev, due_date: tmp}));\n  }\n\n  const getUserNameById = (id) => {\n    return teamUsers.find(user => user.id === id).name;\n  }\n\n  function validate() {\n\n    if (newTaskData.title === \"\") {\n      NotificationManager.warning('Title must be valid', 'Error');\n      return;\n    }\n    if (newTaskData.description === \"\") {\n      NotificationManager.warning('Description must be valid', 'Error');\n      document.getElementById(\"edit-task-description\").focus();\n      return;\n    }\n    if (newTaskData.employee_id === \"\") {\n      NotificationManager.warning('Employee assigned must be valid', 'Error');\n      document.getElementById(\"edit-task-assign\").focus();\n      return;\n    }\n    if (newTaskData.due_date < new Date()) {\n      NotificationManager.warning('Due date cannot be in the past', 'Error');\n      document.getElementById(\"edit-task-date\").focus();\n      return;\n    }\n\n    editTaskItem(newTaskData)\n    reset();\n    handleClose();\n    \n  }\n\n  return (\n    <Modal show={show} onHide={handleClose} >\n      <Modal.Header closeButton>\n        <Modal.Title>\n          { editMode ? newTaskData.title : title }\n        </Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        { !editMode && (\n          <>\n            <p>{description}</p>\n            <p>Assigned to: { getUserNameById(employee_id) }</p>\n            <label>Due on: </label>\n            <Moment name=\"viewMode-due_date\" local format=\"Do MMM YYYY h:mm A\" >{due_date}</Moment> \n          </>\n        )}\n\n        { editMode && (\n          <>\n            <label>Title: </label>\n            <input\n              autofocus\n              className=\"form-control edit-task-title\"\n              value={newTaskData.title}\n              onChange={(event) => setNewTaskData(prev => ({...prev, title: event.target.value}))}\n            />\n            <label>Description: </label>\n            <textarea\n              id=\"edit-task-description\"\n              value={newTaskData.description}\n              onChange={(event) => setNewTaskData(prev => ({...prev, description: event.target.value}))}\n              type=\"text\"\n              className=\"form-control\"\n              name=\"newDescription\"\n            />\n            <label>Re-assign to:</label>\n            <select\n              id=\"edit-task-assign\"\n              name=\"assigned\"\n              className=\"form-control\"\n              onChange={(event) => setNewTaskData(prev => ({...prev, employee_id: event.target.value}))}\n            >\n              <option selected value={employee_id}>{getUserNameById(employee_id)}</option>\n              { assignNewUserList.map(item => {\n                return (\n                  <option value={item.id}>{item.name}</option>\n                )\n              }) }\n            </select>\n            <label>Due date:</label>\n            <DatePicker \n              id=\"edit-task-date\"\n              className=\"form-control\" \n              locale=\"en-US\"\n              selected={new Date(newTaskData.due_date)} \n              showTimeInput\n              onChange={(date) => onDateChange(date)}\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n\n            />\n          </>\n        )}\n        \n      </Modal.Body>\n      <Modal.Footer>\n          { status !== 3 && (\n            <Button \n              onClick={() => handleEditToggle()}\n              variant=\"warning\"\n            > \n              { editMode ? <>Cancel</> : <>Edit</> } \n            </Button>\n          )}\n        { status !== 3 && <Button variant=\"danger\" onClick={() => handleDelete()}>\n          Delete\n        </Button>\n        }\n        \n        { editMode && \n          <Button confirm variant=\"success\" onClick={() => validate()}>\n            Save\n          </Button> \n        }\n        { !editMode && status === 3 && <span className={`badge badge-${taskInfo.type}`}>{taskInfo.status}</span> } \n        { status === 3 && is_late && <span className=\"badge badge-danger\">Late</span> }\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\n","import React from 'react';\n\nimport Moment from 'react-moment';\nimport 'moment-timezone';\n\nexport default function FeedbackList(props) {\n  const {\n    taskId,\n    feedbacks,\n  } = props;\n\n  const filterFeedbackByTask = (tid, feedbacks) => {\n    const tmp = [...feedbacks];\n\n    const PENDING = \"pending\";\n    return tmp.reverse().filter(feedback => {\n      return feedback.task_id === tid && feedback.status !== PENDING; \n    })\n  };\n\n  const feedbackItems = filterFeedbackByTask(taskId, feedbacks)\n    .map(feedback => {\n      return (\n        <div key={feedback.id}>\n          <p>{feedback.feedback_string}</p>\n          <label>Submitted on: </label>\n          <Moment name=\"viewMode-due_date\" local format=\"Do MMM YYYY h:mm A\" >{feedback.submission_date}</Moment>\n          <p>{feedback.status}</p> \n        </div>\n      )\n    })\n\n  return (\n    <div>\n      {feedbackItems}\n    </div>\n  )\n}\n","import React from 'react';\nimport Moment from 'react-moment';\nimport 'moment-timezone'\n\nimport { Modal } from 'react-bootstrap';\n\nimport FeedbackList from './FeedbackList';\nimport getUserNameById from '../../helpers/getUserNameById';\nimport getTaskStatus from '../../helpers/getTaskStatus';\nimport { NotificationManager } from 'react-notifications';\n\nexport default function EmployeeModal(props) {\n  const {\n    show,\n    handleClose,\n    taskItem,\n    teamUsers,\n    submissions,\n    submitTaskItem,\n  } = props;\n\n  const { \n    id,\n    employee_id, \n    title, \n    description, \n    due_date,\n    status,\n    is_late\n  } = taskItem;\n\n  const handleSubmit= () => {\n    NotificationManager.success('Task sent for review', 'Submitted');\n    handleClose();\n    submitTaskItem(taskItem);\n  }\n\n  const taskInfo = getTaskStatus(status);\n\n  return (<>\n    <Modal show={show} onHide={handleClose}>\n    <Modal.Header closeButton>\n      <Modal.Title>{title}</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n      {description}\n    </Modal.Body>\n    <Modal.Body>\n      <p>Assigned to: {getUserNameById(teamUsers, employee_id)}</p>\n      <label>Due on: </label>\n      <Moment name=\"viewMode-due_date\" local format=\"Do MMM YYYY h:mm A\" >{due_date}</Moment>\n      <FeedbackList\n        taskId={id}\n        feedbacks={submissions}\n      />\n    </Modal.Body>\n    <Modal.Footer>\n      { <span className={`badge badge-${taskInfo.type}`}>{taskInfo.status}</span> }\n      { is_late && <span className=\"badge badge-danger\">LATE</span> } \n      { status === 1 &&\n          <button className=\"btn btn-primary\" onClick={() => handleSubmit()}>\n            Submit\n          </button>\n      }\n    </Modal.Footer>\n  </Modal>\n  </>)\n}","import React, { useState } from 'react';\nimport getUserNameById from '../../helpers/getUserNameById';\nimport classNames from 'classnames';\n\nimport Moment from 'react-moment';\nimport 'moment-timezone'\n\nimport ManagerModal from './ManagerModal';\nimport EmployeeModal from './EmployeeModal';\n\n// import { formatDateString } from './utilities/format-date';\n\nexport default function TaskItem(props) {\n  const {\n    role,\n    taskItem,\n    submissions,\n    editTaskItem,\n    deleteTaskItem,\n    submitTaskItem,\n    teamUsers,\n    error,\n    setError\n  } = props;\n  \n  const { \n    title, \n    description, \n    due_date, \n    creation_date, \n    status, \n    is_late,\n    employee_id\n  } = taskItem;\n  \n  const [show, setShow] = useState(false);\n  \n  const taskClass = classNames(\"task__item\", {\n    'task__item--assigned' : !is_late && status === 0,\n    'task__item--in-progress' : !is_late && status === 1,\n    'task__item--in-review' : !is_late && status === 2,\n    'task__item--in-review-late': is_late && status === 2,\n    'task__item--late': is_late && status !== 2 && status !== 3,\n    'task__item--complete' : status === 3\n  });\n\n  /**\n   *  could store all these fn into a helper file\n   * */\n  const handleClose = () => setShow(false);\n\n  return (\n    <>\n      <div className={taskClass}\n        onClick={event => setShow(true)}\n      >\n        <h5 className=\"task-item-title\">{title}</h5>\n        <p className=\"task-item-name'\">{getUserNameById(teamUsers, employee_id)}</p>\n        <p className=\"task-item-description\">{description}</p>\n        {/* { is_late && <span className=\"badge badge-danger task-item-badge\">LATE</span> } */}\n        <div className=\"task-item-dates\">\n          <div className=\"card-date\">\n            <label>On: </label>\n            <Moment name=\"creation_date\" format=\"Do MMM YYYY h:mm A\" >{creation_date}</Moment> \n          </div>\n          <div className=\"tas-item-card-date\">\n            <label>Due:</label>\n            <Moment name=\"due_date\" format=\"Do MMM YYYY h:mm A\" >{due_date}</Moment>\n          </div>\n        </div>\n        <div className=\"task-item-badge-container\">\n          <div className=\"task-item-badge\">\n            { status === 0 && <i className=\"fas fa-people-arrows\"></i> }\n            { status === 1 && <i className=\"fas fa-spinner\"></i> }\n          </div>\n        </div>\n      </div>\n\n      <form\n        onSubmit={event => event.preventDefault()}\n        className=\"form-group\"\n      >\n        { role === 1 &&\n          <ManagerModal \n            teamUsers={teamUsers}\n            taskItem={taskItem}\n            show={show}\n            handleClose={handleClose}\n            editTaskItem={editTaskItem}\n            deleteTaskItem={deleteTaskItem}\n            error={error}\n            setError={setError}\n          />\n        }\n        {role === 2 &&\n          <EmployeeModal\n            show={show}\n            taskItem={taskItem}\n            teamUsers={teamUsers}\n            submissions={submissions}\n            handleClose={handleClose}\n            submitTaskItem={submitTaskItem}\n          />\n        }\n      </form>\n    </>\n  )\n}","import React, { useState, useEffect } from 'react';\n\nimport TaskItem from './TaskItem';\nimport sortTasks from '../../helpers/sortTasks';\nimport findTaskItemById from '../../helpers/findTaskItemById';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nexport default function TaskProgress(props) {\n  const {\n    role,\n    tasks,\n    submissions,\n    editTaskItem,\n    deleteTaskItem,\n    submitTaskItem,\n    teamUsers,\n    error,\n    setErrorNotification,\n    moveTask,\n  } = props;\n\n  // local states\n\n  const [sortedTasks, setSortedTasks] = useState({});\n  const [trashVisible, setTrashVisible] = useState(false);\n\n  useEffect(()=> {\n    const updated = sortTasks(tasks);\n    setSortedTasks(updated);\n  }, [tasks])\n\n  const sortedComponents = {};\n\n  for (const key in sortedTasks) {\n    sortedComponents[key] = sortedTasks[key].map((task, index) => {\n      const draggable = task.status === 3 || task.status === 2 ? true : false;\n      \n      if (task.status !== 3) {\n        return (\n          <Draggable key={task.id} draggableId={\"\" + task.id} index={index} isDragDisabled={draggable} >\n            {(provided, snapshot) => (\n              <div \n                key={task.id}\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                ref={provided.innerRef}\n              >\n                <TaskItem \n                  key={task.id}\n                  taskItem={task}\n                  role={role}\n                  submissions={submissions}\n                  editTaskItem={editTaskItem}\n                  deleteTaskItem={deleteTaskItem}\n                  submitTaskItem={submitTaskItem}\n                  teamUsers={teamUsers}\n                  error={error}\n                  setErrorNotification={setErrorNotification}\n                />\n              </div>\n            )}\n          </Draggable>\n        )\n      } else {\n        return (\n          <TaskItem \n            key={task.id}\n            taskItem={task}\n            role={role}\n            submissions={submissions}\n            editTaskItem={editTaskItem}\n            deleteTaskItem={deleteTaskItem}\n            submitTaskItem={submitTaskItem}\n            teamUsers={teamUsers}\n            error={error}\n            setErrorNotification={setErrorNotification}\n          />\n        )\n      }\n    })\n  }\n\n  const { assigned, inProgress, completed } = sortedComponents;\n\n  const onDragEnd = (res) => {\n    setTrashVisible(false);\n    const { destination, source, draggableId } = res;\n\n    const task = findTaskItemById(tasks, Number(draggableId));\n    if (!destination) {\n      return;\n    }\n\n    if (role !== 1 && source.droppableId === \"assigned\" && destination.droppableId === \"inProgress\") {\n      moveTask(task, 1);\n          }\n    if (role !== 1 && source.droppableId === \"inProgress\" && destination.droppableId === \"assigned\") {\n      moveTask(task, 0);\n    }\n    if (role === 1 && destination.droppableId === \"trash\") {\n      deleteTaskItem(task);\n    }\n  }\n\n  const onBeforeCapture = () => {\n    setTrashVisible(true);\n  }\n\n  return (\n    <div className=\"task-progress\">\n      <DragDropContext\n        onDragEnd={onDragEnd}\n        onBeforeCapture={onBeforeCapture}\n      >\n\n        <div key=\"assigned\" className=\"task-progress-container-assigned\">\n          <h1>Assigned</h1>\n          <Droppable key=\"assigned\" droppableId=\"assigned\">\n            {(provided, snapshot) => (\n              <div \n                className=\"task-column task-assigned\"\n                key=\"assigned\"\n                index=\"1\"\n                ref={provided.innerRef} \n                style={{backgroundColor: snapshot.isDraggingOver ? 'rgba(61, 173, 209, 0.5)' : 'rgba(61, 173, 209, 0.25)'}}\n                {...provided.droppableProps}\n              >\n                { assigned }\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>\n        \n\n        <div key=\"inProgress\" className=\"task-progress-container-inprogress\">\n          <h1>In-Progress</h1>\n          <Droppable key=\"inProgress\" droppableId=\"inProgress\">\n            {(provided, snapshot) => (\n              <div \n                className=\"task-column task-inprogress\"\n                key=\"inProgress\"\n                index=\"2\"\n                ref={provided.innerRef} \n                {...provided.droppableProps}\n                style={{backgroundColor: snapshot.isDraggingOver ? 'rgba(92, 92, 183, 0.5)' : 'rgba(92, 92, 183, 0.25)'}}\n              {...provided.droppableProps}\n              >\n                { inProgress }\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>\n\n        { role === 1 && (\n          <div key=\"trash\" className={trashVisible ? \"trash--visible\" : \"trash--hidden\"} >\n            <Droppable key=\"trash\" droppableId=\"trash\">\n              {(provided, snapshot) => (\n                <div\n                  key=\"trash\"\n                  index=\"3\"\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  <span className=\"trash-icon\"><i className=\"far fa-trash-alt fa-3x\"></i></span>\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </div>\n        )} \n      </DragDropContext>\n\n      <div className=\"task-progress-container-completed\">\n        <h1>Completed</h1>\n        <div className=\"task-column task-completed\">\n          { completed }\n        </div>\n      </div>\n    </div>\n  )\n}","export default function sortTasks(tasks) { \n  const toReturn = {\n    assigned: [],\n    inProgress: [],\n    completed: [],\n  };\n\n  for (const task of tasks) {\n    switch (task.status) {\n      case 1:\n        toReturn.inProgress.push(task);\n        break;\n      case 2:\n        toReturn.inProgress.push(task);\n        break;\n      case 3:\n        toReturn.completed.push(task);\n        break;  \n      default:\n        toReturn.assigned.push(task);\n        break;\n    }\n  }\n  return toReturn;\n};\n  ","export default function filterTasksByUser(tasks, id) {\n  return tasks.find(task => task.id === id);\n}","import React from 'react';\n\nexport default function MyTeamItem(props) {\n  const {\n    member,\n    selectTasksByUser,\n  } = props;\n\n  const { role, name, avatar } = member;\n\n  return (\n    <div \n      className='my-team-item'\n      onClick={() => selectTasksByUser(member)}\n    >\n      <img src={avatar} alt= \"User Avatar\" className='my-team-item-avatar'></img>\n      <div className='my-team-item-right'>\n        <div className='my-team-item-name'>{role === 1 ? 'Show All' : name}</div>\n\n        {/* <div className='my-team-item-details'>{roles[role]}</div>\n        <div className='my-team-item-details'>{email}</div>\n        <div className='my-team-item-details'>{phone_number}</div> */}\n\n      </div>\n    </div>\n  )\n}","import React from 'react';\n\nimport MyTeamItem from './MyTeamItem';\nimport '../../styles/MyTeam.css';\n\nexport default function MyTeam(props) {\n  const {\n    selectTasksByUser,\n    teamUsers,\n  } = props;\n\n  const teamMembers = teamUsers.map((member) => {\n    return (\n    <MyTeamItem\n      key={member.id}\n      member={member}\n      selectTasksByUser={selectTasksByUser}\n    />\n    )\n  })\n\n  return (\n    <div className=\"team-list\">\n      {teamMembers}\n    </div>\n  )\n}","export default function filterTasksByUser(uid, tasks) {\n  return tasks.filter(task => task.employee_id === Number(uid));\n}","import React, { useState, useEffect } from 'react';\n\n\n// import ProjectProgress from './ProjectProgress';\nimport TaskProgress from './TaskProgress';\nimport MyTeam from './MyTeam';\n\nimport filterTasksByUser from '../../helpers/filterTasksByUser';\n\nimport '../../styles/Tasks.css';\n\nexport default function Tasks(props) {\n  const {\n    role,\n    tasks,\n    teamUsers,\n    submissions,\n    editTaskItem,\n    deleteTaskItem,\n    submitTaskItem,\n    error,\n    setErrorNotification,\n    moveTask,\n    setTasks\n  } = props;\n\n  const [selectedTasks, setSelectedTasks] = useState(tasks);\n\n  useEffect(() => {\n    setSelectedTasks(tasks);\n  }, [tasks])\n\n  const selectTasksByUser = (user) => {\n    if (user.role === 1) {\n      setSelectedTasks(tasks);\n      return;\n    }\n    const userTasks = filterTasksByUser(user.id, tasks);\n    setSelectedTasks(userTasks);\n  }\n\n  return (\n    <div className='dashboard'>\n      <div className=\"task-dashboard-top\">\n        <TaskProgress \n          role={role} \n          tasks={selectedTasks} \n          teamUsers={teamUsers} \n          submissions={submissions}\n          deleteTaskItem={deleteTaskItem} \n          editTaskItem={editTaskItem}\n          submitTaskItem={submitTaskItem}\n          error={error}\n          setErrorNotification={setErrorNotification}\n          moveTask={moveTask}\n          setTasks={setTasks}\n        />\n      </div>\n      { role === 1 && \n      <div className=\"task-dashboard-bottom\">\n        <div className=\"team-list-container\" id=\"team-list-filter\">\n          <MyTeam \n            teamUsers={teamUsers} \n            selectTasksByUser={selectTasksByUser}\n          />\n        </div>\n      </div>}\n    </div>\n  )\n}","import React from 'react';\nimport classNames from 'classnames';\n\nexport default function ChatLogItem(props) {\n  const { userId, avatar, senderId, sender, message, time_locale } = props;\n\n  const chatItemClass = classNames(\"chat-item\", { \"own-message\": userId === senderId});\n\n  return (\n    <div className={chatItemClass}>\n      <img className=\"chat-avatar\" alt=\"Employee Avatar\" src={avatar}></img>\n      <div className=\"chat-item-right\">\n        <div className=\"chat-message-sender\">{sender}</div>\n        <div className=\"chat-message\">{message}</div>\n        <span className=\"chat-message-time\">{time_locale}</span>\n      </div>\n    </div>\n  )\n}","export default function getUserById(teamUsers, id) {\n  return teamUsers.find(user => user.id === id);\n}","import { React, useState, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\n\nimport ChatLogItem from \"./ChatLogItem\";\nimport getUserById from '../../helpers/getUserById';\n\nexport default function ChatLog(props) {\n  const { userId, messages, chatInfo, getPrevMessages, teamUsers } = props;\n\n  const [visible, setVisible] = useState(false);\n  const [page, setPage] = useState(1);\n  const loader = useRef(null);\n  const container = useRef(null);\n  // here we handle what happens when user scrolls to Load More div\n  // in this case we just update page variable\n  const handleObserver = (entities) => {\n    const target = entities[0];\n    if (target.isIntersecting) {   \n      setPage((page) => page + 1)\n    }\n  }\n\n  useEffect(() => {\n    var options = {\n      root: null,\n      rootMargin: \"20px\",\n      threshold: 1.0\n    };\n    // initialize IntersectionObserve and attaching to Load More div\n    const observer = new IntersectionObserver(handleObserver, options);\n    if (loader.current) {\n      observer.observe(loader.current)\n    }\n  }, []);\n\n  useEffect(() => {\n    getPrevMessages();\n  }, [page, getPrevMessages]);\n\n  useEffect(() => {\n    setVisible(true);\n    setTimeout(() => {\n      setVisible(false);\n    }, 2000);\n  }, [chatInfo]);\n\n  const chatBottomClass = classNames(\"chat-log-bottom\", {expanded: visible});\n\n  const messageComponents = messages.map((messageData, index) => {\n    const { sender, message, sender_id, time_iso, time_locale } = messageData;\n    return (\n      <ChatLogItem \n        userId={userId}\n        key={`${sender_id}: ${time_iso}`}\n        avatar={getUserById(teamUsers, sender_id).avatar}\n        sender={sender} \n        senderId={sender_id}\n        message={message}\n        time_locale={time_locale}\n      />\n    )\n  })\n\n  return (\n    <div className=\"chat-log\" ref={container}>\n      <div className=\"loading\" ref={loader}></div>\n      {messageComponents}\n      <div className={chatBottomClass}>\n        <span className=\"clat=info\">\n          {chatInfo}\n        </span>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport classNames from 'classnames';\n\n\nexport default function MembersListItem(props) {\n  const { name, role, avatar, online } = props;\n  const imgClass = classNames('chat-avatar', 'members-list-avatar', { 'avatar-online': online })\n  const itemClass = classNames('members-list-item', { 'member-item-online': online })\n  return (\n    <div className={itemClass}>\n      <img src={avatar} alt= \"User Avatar\" className={imgClass}></img>\n      <div className='member-item-right'>\n        <div className='member-item-name'>{name}</div>\n        <div className='member-item-role'>{role}</div>\n      </div>\n    </div>\n  )\n}","import React from 'react';\n\nimport MembersListItem from \"./MembersListItem\";\n\nconst roles = [\"Project Manager\", \"Developer\"];\n\nexport default function MembersList(props) {\n  const { teamUsers, onlineUsers } = props;\n\n  const memberComponents = teamUsers.map(member => {\n    const {id, name, role, avatar} = member;\n    return (\n      <MembersListItem \n        key={id}\n        name={name} \n        role={roles[role-1]}\n        avatar={avatar}\n        online={onlineUsers.includes(id)}\n      />\n    );\n  })\n  return (\n    <div className=\"members-list\">\n      {memberComponents}\n    </div>\n  )\n}","import { React, useState } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\n\n\nexport default function InputBox(props) {\n  const { sendMessage } = props;\n  const [ message, setMessage ] = useState('');\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    if (message) {\n      sendMessage( message );\n      setMessage('');\n    }\n  };\n\n  return (\n    <div className=\"chat-input-box\">\n      <form \n        autoComplete=\"off\"\n        onSubmit={e => submitForm(e)}\n      >\n        <TextareaAutosize \n          className=\"chat-input\"\n          name=\"msg\"\n          type=\"text\"\n          placeholder=\"Your message\"\n          value={message}\n          onChange={e => setMessage(e.target.value)}\n          onKeyPress={e => {\n            if(e.key === 'Enter')\n               submitForm(e);\n            }}\n        />\n        <button className=\"chat-send\" type=\"submit\"><i className=\"material-icons\">send</i></button>\n      </form>\n    </div>\n  );\n}","import { React } from 'react';\n\nimport ChatLog from \"./ChatLog\";\nimport MembersList from \"./MembersList\";\nimport InputBox from \"./InputBox\";\nimport ScrollToBottom from 'react-scroll-to-bottom';\n\nimport '../../styles/Chat.css';\n\nimport useChat from '../../hooks/useChat';\n\nexport default function Chat(props) {\n  const { socket, userInfo, teamUsers, messages, setMessages } = props\n\n  const { \n    //messages, \n    joinMessage, \n    onlineUsers, \n    getPrevMessages, \n    sendMessage,\n  } = useChat(socket, userInfo, messages, setMessages);\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-left\">\n        <ScrollToBottom className=\"chat-log-container\">\n          <ChatLog \n            userId={userInfo.id}\n            messages={messages} \n            chatInfo={joinMessage} \n            getPrevMessages={getPrevMessages}\n            teamUsers={teamUsers}\n          />\n        </ScrollToBottom>\n        <InputBox sendMessage={sendMessage} />\n      </div>\n      <MembersList teamUsers={teamUsers} onlineUsers={onlineUsers} />\n    </div>\n  )\n};","import { useState, useEffect } from 'react';\n\nimport formatDateString from \"../utilities/format-date\";\n\nexport default function useChat(socket, userInfo, messages, setMessages) {\n  const { id, name, team_id } = userInfo;\n\n  //const [ messages, setMessages ] = useState([]);\n  const [ onlineUsers, setOnlineUsers ] = useState([]);\n  const [ joinMessage, setJoinMessage ] = useState(\"\");\n\n  const getLastMessageTime = (messages) => {\n    const lastMsg = messages[messages.length -1];\n    return lastMsg ? lastMsg.time_iso : 0;\n  }\n\n  useEffect(() => {\n    //socket = io();\n\n    socket.emit('joining msg', name, id, getLastMessageTime(messages));\n\n    socket.on('user joined', (users, username, messagesData) => {\n      setOnlineUsers(users);\n      setJoinMessage(username + \" joined the chat\")\n      if (messagesData.length) {\n        setMessages(messagesData, true);\n      } \n    });\n\n    socket.on('user left', (users, username) => {\n      setOnlineUsers(users);\n      setJoinMessage(username + \" left the chat\")\n    });\n  \n    socket.on('chat message', function(messageData) {\n      setMessages([messageData], true);\n    });\n\n    socket.on('get previous messages', messagesData => {\n      setMessages(messagesData, false);\n    });\n\n    socket.on('message saved', function(messageData) {\n    });\n\n    return () => {\n      socket.off('user joined');\n      socket.off('user left');\n      socket.off('chat message');\n      socket.off('get previous messages');\n      socket.off('message saved');\n      socket.emit('leaving msg', name, id );\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getPrevMessages = () => {\n    if (messages[0]) {\n      socket.emit('get previous messages', messages[0].time_iso, 12);\n    }\n  }\n\n  const sendMessage = message => {\n    const now = new Date();\n    const messageData = {\n      message,\n      team_id,\n      sender_id: id,\n      sender: name,\n      time_iso: now.toISOString(),\n      time_locale: formatDateString(now),\n    }\n    socket.emit('chat message', messageData);\n  };\n\n  return { \n    messages, \n    joinMessage, \n    onlineUsers, \n    getPrevMessages, \n    sendMessage,\n  };\n}","export default function formatDateString(date) {\n  const dateString = date.toLocaleDateString('en-US', {\n    day:    'numeric',\n    month:  'short',\n    year:   'numeric'\n  });\n\n  const timeString = date.toLocaleTimeString(undefined, {\n    hour:   'numeric',\n    minute: '2-digit',\n});\n\n  return dateString + \" at \" + timeString;\n}","export function getEmployeeName (data, empID) {\n  let result = '';\n\n  for (const index of data) {\n    if (index.id === empID) {\n      result = index.name;\n    }\n  }\n  return result;\n}","import React, { useState } from 'react';\nimport { getEmployeeName } from '../../helpers/getEmployeeName';\nimport { Button, Modal } from 'react-bootstrap';\nimport Moment from 'react-moment';\n\nexport default function Feedback(props) {\n  const {\n    teamUsers,\n    selectedTask,\n    show,\n    setShow,\n    giveFeedback,\n    setUserNotification,\n    user\n  } = props; \n\n  const {\n    title,\n    description,\n    employee_id,\n    creation_date,\n    due_date,\n    is_late,\n  } = selectedTask;\n\n  const [feedback, setFeedback] = useState({\n    message: \"\",\n  });\n\n  const handleClose = () => {\n    setShow(false);\n  }\n\n  const handleSubmit = (accepted) => {\n    if (feedback.message === \"\") {\n      setUserNotification(prev => ({...prev, title: \"Error\", message: \"Please enter a feedback\", type: \"error\", user: user.id}))\n      return;\n    }\n    giveFeedback(feedback.message, selectedTask, accepted);    \n    setFeedback(prev => ({...prev, message: \"\"}));\n    setShow(false);\n  }\n\n  return (\n\n    <div className=\"feedback-container\">\n      <Modal show={show} onHide={handleClose} >\n        <Modal.Header closeButton>\n          <Modal.Title>\n            {title}\n          </Modal.Title>\n        </Modal.Header>\n\n        <form className=\"form-group\" onSubmit={event => event.preventDefault()}>\n          <Modal.Body>\n            <p>{description}</p>\n            <p>Assigned to: {getEmployeeName(teamUsers, employee_id)}</p>\n            <p>On: <Moment format=\"Do MMM YYYY h:mm A\" >{creation_date}</Moment>\n            </p>\n            <p>Due on: <Moment format=\"Do MMM YYYY h:mm A\" >{due_date}</Moment>\n              { is_late && (<span className=\"badge badge-danger\">LATE</span>) }\n            </p>\n            \n            <div>\n              <label>Feedback:</label>\n              <textarea\n                name=\"feedback\"\n                className=\"form-control\"\n                value={feedback.message}\n                onChange={event => setFeedback(prev => ({...prev, message: event.target.value}))}\n              />\n            </div>\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button \n              variant=\"danger\"\n              onClick={(event) => handleSubmit(false)}\n            >\n              Reject\n            </Button>\n            <Button \n              variant=\"success\"\n              onClick={(event) => handleSubmit(true)}\n            >\n              Accept\n            </Button>\n          </Modal.Footer>\n        </form>\n      </Modal>\n    </div>\n  )\n}","import React from 'react';\n\nimport Moment from 'react-moment';\n\nexport default function SubmissionItem(props) {\n\n  const { title, name, description, is_late, taskData, setSelectedTask, setShow } = props;\n\n  const handleOpen = () => {\n    setSelectedTask(taskData);\n    setShow(true);\n  }\n\n  return (\n    <div className=\"submission-card-item\" onClick={event => handleOpen()}>\n      <h5>{title}</h5>\n      <p className=\"submission-card-name'\">{name}</p>\n      <p className=\"submission-card-description\">{description}</p>\n      { is_late && <span className=\"badge badge-danger submission-badge\">LATE</span> }\n      <div className=\"submission-card-item-dates\">\n        <div className=\"card-date\">\n          <label>On: </label>\n          <Moment name=\"creation_date\" format=\"Do MMM YYYY h:mm A\" >{taskData.creation_date}</Moment> \n        </div>\n        <div className=\"card-date\">\n          <label>Due:</label>\n          <Moment name=\"due_date\" format=\"Do MMM YYYY h:mm A\" >{taskData.due_date}</Moment>\n        </div>\n      </div>\n      <div className=\"submission-card-item-badge-container\">\n        <div className=\"submission-card-item-badge\">\n          { taskData.status === 0 && <i className=\"fas fa-people-arrows\"></i> }\n          { taskData.status === 1 && <i className=\"fas fa-spinner\"></i> }\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react';\n\nimport SubmissionItem from './SubmissionItem';\nimport { getEmployeeName } from '../../helpers/getEmployeeName';\n\nexport default function SubmisionList(props) {\n\n  const { \n    teamUsers, \n    teamTasks, \n    setSelectedTask, \n    setShow \n  } = props;\n\n  const listedTeamTasks = teamTasks.map((task) => {\n    return (\n      task.status === 2 &&\n      <SubmissionItem\n        key={task.id}\n        title={task.title}\n        description={task.description}\n        name={getEmployeeName(teamUsers, task.employee_id)}\n        is_late={task.is_late}\n        is_viewed={task.is_viewed}\n        taskData={task}\n        setSelectedTask={setSelectedTask}\n        setShow={setShow}\n      />\n    )\n  })\n\n  return (\n    <div className=\"submissions-list\">\n      {listedTeamTasks}\n    </div>\n  )\n}\n","import React, { useState } from 'react';\n\nimport Feedback from './Feedback';\nimport SubmissionList from './SubmissionList';\n\nimport '../../styles/Submissions.css';\n\nexport default function Submissions(props) {\n\n  const { \n    teamUsers, \n    teamTasks, \n    giveFeedback,\n    setUserNotification,\n    user\n  } = props;\n  \n  const [selectedTask, setSelectedTask] = useState({});\n  const [show, setShow] = useState(false);\n\n  return (\n    <div className=\"submissions-container\">\n      <h1>Submitted Tasks</h1>\n      <div className=\"submissions\">\n        <SubmissionList\n          teamUsers={teamUsers}\n          teamTasks={teamTasks}\n          setSelectedTask={setSelectedTask}\n          setShow={setShow}\n        />\n      </div>\n      <div>\n        <Feedback\n          teamUsers={teamUsers}\n          selectedTask={selectedTask}\n          show={show}\n          setShow={setShow}\n          giveFeedback={giveFeedback}\n          setUserNotification={setUserNotification}\n          user={user}\n        />\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport classNames from 'classnames';\n\nexport default function SidebarItem(props) {\n  const menuClass = classNames(\"sidebar-list__item\", {\n    'sidebar-list__item--selected': props.selected\n  })\n\n  return (\n    <li\n      className={menuClass}\n      onClick={() => props.setMenu(props.name)}\n    >\n      <h3>{props.name}</h3>\n    </li>\n  )\n}","import React, { useState } from 'react';\n\nimport DatePicker from \"react-datepicker\";\nimport { Modal, Button } from 'react-bootstrap';\n\nexport default function NewTaskItem(props) {\n  \n  const dateNow = new Date();\n  dateNow.setDate(dateNow.getDate() + 7);\n  dateNow.setHours(17); \n  dateNow.setMinutes(0);\n\n  const {\n    team,\n    teamUsers,\n    createTaskItem, \n    setErrorNotification,\n  } = props;\n\n  const [taskItem, setTaskItem] = useState({\n    projecttask_id: team,\n    title: \"\",\n    description: \"\",\n    employee_id: \"\",\n    due_date: dateNow,\n  });\n\n  const [show, setShow] = useState(false);\n\n  const teamMembersList = teamUsers.filter(user => user.role !== 1);\n\n  const handleClose = () => setShow(false);\n\n  function reset() {\n    setTaskItem(prev => ({\n      ...prev,\n      title: \"\",\n      description: \"\",\n      employee_id: \"\",\n    }))\n  }\n\n  function validate() {\n    const { title, description, employee_id, due_date } = taskItem;\n\n    if (title === \"\") {\n      setErrorNotification(prev => ({...prev, title: \"Error\", message: \"Title must be valid\"}))\n      document.getElementById(\"new-task-title\").focus();\n      return;\n    }\n    if (description === \"\") {\n      setErrorNotification(prev => ({...prev, title: \"Error\", message: \"Description must be valid\"}))\n      document.getElementById(\"new-task-description\").focus();\n      return;\n    }\n    if (employee_id === \"\") {\n      setErrorNotification(prev => ({...prev, title: \"Error\", message: \"Employee assigned must be valid\"}))\n      document.getElementById(\"new-task-assign\").focus();\n      return;\n    }\n    if (due_date < new Date()) {\n      setErrorNotification(prev => ({...prev, title: \"Error\", message: \"Due date cannot be in the past\"}))\n      document.getElementById(\"new-task-date\").focus();\n      return;\n    }\n    createTaskItem(taskItem)\n    reset();\n    setShow(false);\n  }\n\n  return (\n    <div className=\"create-task\">\n      <span></span>\n      <span></span>\n      <p onClick={() => setShow(true)}>Create New Task</p>\n      {/* <span className=\"new-task-btn\" onClick={() => setShow(true)}><i class=\"fas fa-plus new-task-btn\"></i> New Task</span> */}\n\n      <form \n        className=\"form-group\"\n        onSubmit={event => event.preventDefault()}\n      >\n        <Modal show={show} onHide={handleClose} onEntered={() => document.getElementById(\"new-task-title\").focus()} >\n          <Modal.Header closeButton>\n            <Modal.Title>\n              <h3>New Task</h3>\n            </Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <label>Title: </label>\n            <input\n              id=\"new-task-title\"\n              name=\"title\"\n              className=\"form-control\"\n              value={taskItem.title}\n              onChange={(event) => setTaskItem(prev => ({...prev, title: event.target.value}))}\n            />\n\n            <label>Description: </label>\n            <textarea\n              id=\"new-task-description\"\n              name=\"description\"\n              className=\"form-control\"\n              value={taskItem.description}\n              onChange={(event) => setTaskItem(prev => ({...prev, description: event.target.value}))}\n            />\n\n            <label>Assign to: </label>\n            <select className=\"form-control\"\n              id=\"new-task-assign\"\n              onChange={event => setTaskItem(prevTaskItem => ({...prevTaskItem, employee_id: Number(event.target.value)}))}\n            >\n              <option key={undefined} defaultValue=\"\"></option>\n              { teamMembersList.map(member => {\n                return (\n                  <option key={member.id} value={member.id}>{member.name}</option>\n                )\n              })  }\n            </select>\n            <br />\n            <label>Due on: </label>\n            <DatePicker \n              id=\"new-task-date\"\n              className=\"form-control\" \n              selected={new Date(taskItem.due_date)} \n              showTimeInput\n              onChange={date => setTaskItem(prevTaskItem => ({...prevTaskItem, due_date: date}))}\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n            />\n\n          </Modal.Body>\n\n          <Modal.Footer>\n            <Button \n              variant=\"primary\"\n              onClick={event => (validate())}\n            >\n              Submit\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </form>\n    </div>\n\n  )\n}","import '../../styles/Sidebar.css';\n\nimport React from 'react';\n\nimport SidebarItem from './SidebarItem';\nimport NewTaskItem from '../Tasks/NewTaskItem';\n\nexport default function Sidebar(props) {\n  const {\n    selectedMenu,\n    userInfo,\n    teamUsers,\n    setMenu,\n    createTaskItem,\n    error,\n    setErrorNotification\n  } = props\n\n  const menuItems = userInfo.role === 1 ? \n    ['Dashboard', 'Tasks', 'Chat','Submissions'] : \n    ['Dashboard', 'Tasks', 'Chat'];\n\n  return (\n    <ul>\n    { menuItems.map((item, index) => {\n      return (\n        <SidebarItem\n          key={index}\n          name={item}\n          selected={selectedMenu === item}\n          setMenu={setMenu}\n        />)\n      })}\n      { userInfo.role === 1 && (\n        <div key={4}>\n          <NewTaskItem\n            team={userInfo.team_id}\n            teamUsers={teamUsers} \n            createTaskItem={createTaskItem} \n            error={error}\n            setErrorNotification={setErrorNotification}\n          />\n        </div>\n      )}\n    </ul>\n  )\n}","import React from 'react';\n\nimport Moment from 'react-moment';\nimport { getEmployeeName } from '../../helpers/getEmployeeName';\n\nexport default function DeadlineListItem(props) {\n\n  const { due_date, creation_date, assignedTo, userInfo, teamUsers, is_late, status } = props;\n\n  return (\n    <div className={`deadline-card-${status === 0 ? 'assigned' : 'inprogress'}`}>\n\n      <h5>{props.title}</h5>\n      { userInfo.role === 1 && <p>{getEmployeeName(teamUsers, assignedTo)}</p> }\n      <div className=\"card-date\">\n        <label>On: </label>\n        <Moment name=\"creation_date\" format=\"Do MMM YYYY h:mm A\" >{creation_date}</Moment> \n      </div>\n      <div className=\"card-date\">\n        <label>Due:</label>\n        <Moment name=\"due_date\" format=\"Do MMM YYYY h:mm A\" >{due_date}</Moment>\n      </div>\n      <div className={`deadline-card-badge-container-${status === 0 ? 'assigned' : 'inprogress'}`}>\n        \n        <div className=\"deadline-card-badge\">\n          { status === 0 && <i className=\"fas fa-people-arrows\"></i> }\n          { status === 1 && <i className=\"fas fa-spinner\"></i> }\n        </div>\n      </div>\n      { is_late && <span className=\"badge badge-danger\">LATE</span> }\n    </div>\n  )\n  \n}","import React from 'react';\n\nimport DeadlineListItem from './DeadlineListItem';\n\nexport default function DeadlineList(props) {\n\n  const { deadlines, userInfo, teamUsers } = props;\n\n  const filteredUserDeadlinesByUser = \n    deadlines\n    .filter(task => task.employee_id === userInfo.id)\n    .map((task) => {\n      return (\n        <DeadlineListItem\n          key={task.id}\n          title={task.title}\n          description={task.description}\n          due_date={task.due_date}\n          creation_date={task.creation_date}\n          userInfo={userInfo}\n          assignedTo={task.employee_id}\n          is_late={task.is_late}\n          teamUsers={teamUsers}\n          status={task.status}\n        />\n      )\n    })\n\n  const filteredUserDeadlines = deadlines.map(task => {\n    return (\n      <DeadlineListItem\n        key={task.id}\n        title={task.title}\n        description={task.description}\n        due_date={task.due_date}\n        creation_date={task.creation_date}\n        userInfo={userInfo}\n        assignedTo={task.employee_id}\n        is_late={task.is_late}\n        teamUsers={teamUsers}\n        status={task.status}\n      />\n    )\n  })\n\n  return (\n    <ul className=\"deadline-ul\">\n      { userInfo.role === 1 ? filteredUserDeadlines : filteredUserDeadlinesByUser }\n    </ul>\n  )\n}","export default function filterDeadlineTasks(tasks) {\n  const dateNow = new Date().getTime();\n  const convertDate = (date) => new Date(date).getTime();\n\n  return tasks.filter(task => convertDate(task.due_date) < dateNow && (task.status === 0 || task.status === 1));\n}\n","import React, { useState } from 'react';\n\nimport DeadlineList from './DeadlineList';\n\nimport filterDeadlineTasks from '../../helpers/filterDeadlineTasks';\n\nconst roles = {\n  1: \"Project Manager\",\n  2: \"Employee\"\n}\n\nexport default function UserInfo(props) {\n  const { userInfo, tasks, teamUsers, transparent, selectedMenu } = props;\n  const filteredTasks = filterDeadlineTasks(tasks);\n  const [openFilter, setOpenFilter] = useState(false);\n\n  const toggleFilter = (state) => {\n    document.getElementById(\"team-list-filter\").classList.toggle(\"change\");\n    \n    return state ? setOpenFilter(false) : setOpenFilter(true);\n  }\n\n  return (\n    <>\n      <div className={`user-info-transparent-${transparent}${openFilter && selectedMenu === \"Tasks\" ? ' change' : ''}`}  id=\"user-panel-wings\">\n        { userInfo && ( \n          <>\n            { userInfo.role === 1 && transparent === true && selectedMenu === \"Tasks\" && (\n              <span \n                className=\"user-filter-btn\"\n                onClick={event => toggleFilter(openFilter)}\n              >\n                <i className=\"fas fa-filter fa-2x\"></i>\n              </span>\n            )}\n            <img alt={userInfo.name} src={userInfo.avatar} className=\"user-avatar\"></img>\n            <h5>Welcome, {userInfo.name}</h5>\n            <h6>{roles[userInfo.role]}</h6>\n            <p>Past Due</p>\n            <div className=\"deadlines\">\n              <DeadlineList deadlines={filteredTasks} userInfo={userInfo} teamUsers={teamUsers} />\n            </div>\n            <div className=\"socials\">\n              <span><a href=\"https://github.com/clarchiu\" target=\"_blank\" rel=\"noreferrer\"><i className=\"fab fa-github\"></i><p>Clarence</p></a></span>\n              <span><a href=\"https://github.com/Kevinli296\" target=\"_blank\" rel=\"noreferrer\"><i className=\"fab fa-github\"></i><p>Kevin</p></a></span>\n              <span><a href=\"https://github.com/shaun-ws-yap\" target=\"_blank\" rel=\"noreferrer\"><i className=\"fab fa-github\"></i><p>Shaun</p></a></span>\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  )\n}","import React, { useState } from 'react';\n\nimport SlidingPanel from 'react-sliding-side-panel';\nimport 'react-sliding-side-panel/lib/index.css';\n\nimport UserInfo from './UserInfo';\n\nimport '../../styles/UserInfo.css';\n\nexport default function UserPanel(props) {\n  const { userInfo, tasks, teamUsers, selectedMenu } = props;\n  const [openPanel, setOpenPanel] = useState(false);\n\n  const handleButton = (state) => {\n    document.getElementById(\"user-hamburger\").classList.toggle(\"change\");\n    return state ? setOpenPanel(false) : setOpenPanel(true);\n  }\n  \n  return (\n    <>\n      <div>\n        <div className=\"open-user-panel\" id=\"user-hamburger\" onClick={event => handleButton(openPanel)}>\n          <div className=\"bar1\">\n          </div>\n          <div className=\"bar2\">\n          </div>\n          <div className=\"bar3\">\n          </div>\n        </div>\n\n        <div className=\"user-panel\">\n          <UserInfo\n            userInfo={userInfo} \n            tasks={tasks} \n            teamUsers={teamUsers}\n            transparent={true}\n            selectedMenu={selectedMenu}\n          />\n        </div>\n        <div className=\"hidden-user-panel\">\n          <SlidingPanel\n            type={'right'}\n            isOpen={openPanel}\n            size={30}\n          >\n            <UserInfo\n              userInfo={userInfo} \n              tasks={tasks} \n              teamUsers={teamUsers}\n              transparent={false}\n              selectedMenu={selectedMenu}\n            /> \n          </SlidingPanel>\n        </div>\n      </div>\n    </>\n  )\n} ","import React, { useState } from 'react';\n\nimport '../../styles/Login.css';\n\nexport default function Login(props) {\n  const { setLogin } = props;\n  const [loginId, setLoginId] = useState(0);\n\n  function handleLogin() {\n    setLogin(loginId);\n  }\n\n  return (\n    <div className=\"login-container\">\n      \n      <ul className=\"box-area\">\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <div className=\"login\">\n          <h1>Enter your user ID </h1>\n          <input\n            onChange={event => setLoginId(event.target.value)}\n          />\n          <br />\n          <span className=\"login-button\" onClick={handleLogin}> \n            Submit\n            <span></span>\n            <span></span>\n            <span></span>\n            <span></span>\n          </span>\n          <div className=\"login-info\">\n            <p>User ID <strong>1</strong> - manager view</p>\n            <p>User ID <strong>2 to 5</strong> - employee view</p>\n          </div>\n        </div>\n      </ul>\n    </div>\n  )\n}","import '../styles/App.css';\nimport 'react-pro-sidebar/dist/css/styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-notifications/lib/notifications.css';\nimport 'react-tabs/style/react-tabs.css';\n\nimport { useState, useEffect } from 'react';\nimport { NotificationManager, NotificationContainer } from 'react-notifications';\n\nimport Dashboard from './Dashboard';\nimport Tasks from './Tasks';\nimport Chat from './Chat';\nimport Submissions from './Submissions';\nimport Sidebar from './Sidebar';\nimport UserPanel from './UserPanel';\nimport Login from './Login';\n\nimport useApplicationData from '../hooks/useApplicationData';\nimport useNotifications from '../hooks/useNotifications';\nimport useSocket from '../hooks/useSocket';\nimport useTasks from '../hooks/useTasks';\n\n\nconst DASHBOARD = \"Dashboard\";\nconst TASKS = \"Tasks\";\nconst CHAT = \"Chat\";\nconst SUBMISSIONS = \"Submissions\"\n\nfunction App() {\n  const [selectedMenu, setMenu] = useState(DASHBOARD);\n  const [loginToken, setLoginToken] = useState(0);\n  const [errorNotification, setErrorNotification] = useState({\n    title: \"\",\n    message: \"\",\n  });\n  \n  const { socket } = useSocket(loginToken);\n\n  const { \n    state,\n    logout,\n    setTasks,  \n    setSubmissions,\n    setMessages,\n  } = useApplicationData(socket, loginToken, setErrorNotification);\n  \n  const {\n    userTasks,\n    userInfo,\n    role,\n    teamTasks,\n    teamUsers,\n    submissions,\n    messages,\n  } = state;\n\n  const { \n    setUserNotification,\n    setManagerNotification\n  } = useNotifications(userInfo, setMenu, NotificationManager);\n\n  const {\n    moveTask,\n    createTaskItem,\n    editTaskItem,\n    deleteTaskItem,\n    submitTaskItem,\n    giveFeedback,\n  } = useTasks(loginToken, socket, submissions, setTasks, setSubmissions, setUserNotification, setManagerNotification, userInfo);\n\n  useEffect(() => {\n    if (errorNotification.message !== \"\") {\n      NotificationManager.error(errorNotification.title, errorNotification.message);\n      setErrorNotification(prev => ({...prev, title: \"\", message: \"\"}))\n    }\n  }, [errorNotification]);\n\n\n  const handleLogout = () => {\n    logout();\n    setManagerNotification({message: \"\", title: \"\", type: \"\", user: undefined})\n    setUserNotification({message: \"\", user: undefined, title: \"\", type: \"\"})\n    setLoginToken(0);\n    setMenu(DASHBOARD);\n  }\n\n  if ( loginToken === 0 ) {\n    return (\n      <Login setLogin={setLoginToken}/> \n    )\n  }\n\n  return (\n    <div className=\"app-container\">\n      <NotificationContainer />\n      <section className=\"sidebar\">\n        <img \n          alt=\"Scrum-ptious Logo\"\n          className=\"sidebar-centered\"\n          src=\"https://www.freelogodesign.org/file/app/client/thumb/fb19eb8b-21e7-4a5b-9695-a099867ef5e5_200x200.png?1611814732064\"\n        />\n        <nav className=\"sidebar__menu\">\n          <Sidebar\n            selectedMenu={selectedMenu}\n            userInfo={userInfo}\n            teamUsers={teamUsers}\n            setMenu={setMenu}\n            createTaskItem={createTaskItem}\n            errorNotification={errorNotification}\n            setErrorNotification={setErrorNotification}\n          />\n        </nav>\n        <span \n          className=\"logout\"\n          onClick={() => handleLogout()}\n        >\n          <p>Log out</p>\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n        </span>\n      </section>\n        <section className=\"dashboard-main\">\n          { selectedMenu === DASHBOARD && \n            <Dashboard\n              tasks={userTasks} \n              role={role} \n              teamTasks={teamTasks}\n              teamUsers={teamUsers}\n              userInfo={userInfo}\n            /> }\n          { selectedMenu === TASKS && \n            <Tasks \n              socket={socket} \n              role={role} \n              tasks={role === 1 ? teamTasks : userTasks} \n              teamUsers={teamUsers} \n              submissions={submissions}\n              deleteTaskItem={deleteTaskItem} \n              editTaskItem={editTaskItem}\n              submitTaskItem={submitTaskItem}\n              setErrorNotification={setErrorNotification}\n              moveTask={moveTask}\n              setTasks={setTasks}\n            />}\n          { selectedMenu === CHAT && \n            <Chat \n              socket={socket} \n              userInfo={userInfo} \n              teamUsers={teamUsers}\n              messages={messages}\n              setMessages={setMessages}\n            />}\n          { selectedMenu === SUBMISSIONS &&\n            <Submissions\n              teamUsers={teamUsers}\n              teamTasks={teamTasks}\n              giveFeedback={giveFeedback}\n              setUserNotification={setUserNotification}\n              user={userInfo}\n            />}\n        </section>\n        <section className=\"user__info\">\n          <UserPanel \n            userInfo={userInfo} \n            tasks={teamTasks} \n            teamUsers={teamUsers}\n            selectedMenu={selectedMenu}\n          />\n        </section>\n    </div>\n  );\n}\n\nexport default App\n","import { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\n\nexport default function useSocket(loginToken) {\n  const [socket, setSocket] = useState({});\n\n  useEffect(() => {\n    if (!loginToken) {\n      return;\n    }\n    const conn = io();\n    setSocket(conn);\n\n    return () => {\n      conn.close();\n    }\n  }, [loginToken])\n\n  return { socket };\n};","import { useState, useEffect } from 'react';\nimport filterTasksByUser from '../helpers/filterTasksByUser';\n// import { Prev } from 'react-bootstrap/esm/PageItem';\n\n\nexport default function useApplicationData(socket, loginToken, setError) {\n  const [state, setState] = useState({\n    userInfo: {},\n    role: 0,\n    userTasks: [],\n    teamUsers: [],\n    teamTasks: [],\n    submissions: [],\n    messages: [],\n  });\n  \n  const logout = () => setState({\n    userInfo: {},\n    role: 0,\n    userTasks: [],\n    teamUsers: [],\n    teamTasks: [],\n    submissions: [],\n    messages: [],\n  });\n  \n  const setTasks = teamTasks => {\n    const userTasks = filterTasksByUser(loginToken, teamTasks);\n    setState(prev => ({...prev, teamTasks, userTasks}));\n  }\n  const setSubmissions = submissions => setState(prev => {\n    return {...prev, submissions }\n  })\n\n  const setMessages = (messages, shouldAppend) => setState(prev => {\n    if (shouldAppend) {\n      return {...prev, messages: [...prev.messages, ...messages]};\n    }\n    return {...prev, messages: [...messages, ...prev.messages]};\n  })\n\n  useEffect(() => {\n    if (!loginToken) {\n      return;\n    }\n\n    if (!socket) {\n      return;\n    }\n\n    socket.emit('user logged in', loginToken);\n\n    socket.on('login data', loginData => {\n      console.log(loginData);\n      const { userTasks, userInfo, teamTasks, teamUsers, submissions } = loginData;\n      setState(prev => ({ \n        ...prev, \n        userTasks, \n        userInfo, \n        teamTasks, \n        teamUsers, \n        submissions, \n        role: userInfo.role, \n      }));\n    });\n\n    socket.on('error', (error, data) => {\n      setError(prev => ({...prev, title: data.title, message: error}));\n    });\n\n    return () => {\n      if (!loginToken) {\n        socket.off('login data'); \n        socket.off('error');\n      }\n    }\n  }, [socket, setError]);\n\n\n  return { \n    state, \n    logout,\n    setTasks,  \n    setSubmissions,\n    setMessages,\n  }\n}","import { useState, useEffect } from 'react';\n\nexport default function useNotifications(userInfo, setMenu, NotificationManager) {\n  const [userNotification, setUserNotification] = useState({\n    title: \"\",\n    message: \"\",\n    type: \"\",\n    user: \"\",\n  });\n\n  const [managerNotification, setManagerNotification] = useState({\n    title: \"\",\n    message: \"\",\n    type: \"\",\n    user: \"\",\n  });\n\n  useEffect(() => {\n    if (userNotification.message !== \"\" && userNotification.user === userInfo.id) {\n      switch(userNotification.type) {\n        case 'info':\n          setManagerNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          NotificationManager.info(userNotification.message, userNotification.title, 5000, () => {\n            setMenu(\"Tasks\");\n          });\n          setUserNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          break;\n        case 'success':\n          setManagerNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          NotificationManager.success(userNotification.message, userNotification.title);\n          setUserNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          break;\n        case 'warning':\n          setManagerNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          NotificationManager.warning(userNotification.message, userNotification.title, 5000, () => {\n            setMenu(\"Tasks\");\n          })\n          setUserNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          break;\n        case 'error':\n          setManagerNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          NotificationManager.error(userNotification.message, userNotification.title);\n          setUserNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          break;\n        default: \n          break;\n      }\n      setManagerNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n      setUserNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n    }\n    if (managerNotification.message !== \"\" && managerNotification.user === userInfo.id) {\n      switch(managerNotification.type) {\n        case 'info':\n          setUserNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          NotificationManager.info(managerNotification.message, managerNotification.title);\n          setManagerNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          break;\n        case 'success':\n          setUserNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          NotificationManager.success(managerNotification.message, managerNotification.title);\n          setManagerNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          break;\n        case 'warning':\n          setUserNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          NotificationManager.warning(managerNotification.message, managerNotification.title);\n          setManagerNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          break;\n        case 'error':\n          setUserNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          NotificationManager.error(managerNotification.message, managerNotification.title);\n          setManagerNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n          break;\n        default: \n          break;\n      }\n      setUserNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n      setManagerNotification(prev => ({...prev, title: \"\", message: \"\", type: \"\", user: \"\"}));\n    }\n  }, [userNotification, managerNotification])\n\n  return {\n    userNotification,\n    managerNotification,\n    setUserNotification,\n    setManagerNotification\n  }\n}","import { useEffect } from 'react';\nimport findSubmissionByTask from '../helpers/findSubmissionByTask';\n\nexport default function useTasks(loginToken, socket, submissions, setTasks, setSubmissions, setUserNotification, setManagerNotification, userInfo) {\n  const TASK_STATUS = {\n    ASSIGNED: 0,\n    IN_PROGRESS: 1,\n    IN_REVIEW: 2,\n    COMPLETE: 3,\n  }\n\n  useEffect(() => {\n    if (!loginToken) {\n      return;\n    }\n\n    if (!socket) {\n      return;\n    }\n\n    socket.on('tasks update', (teamTasks, userToAlert) => {\n      setTasks(teamTasks);\n      setUserNotification(prev => ({...prev, message: \"Your tasks have updated\", user: userToAlert, title: \"Click to view\", type: \"warning\"}))\n    });\n    \n    socket.on('tasks action saved', (op, task) => {\n      switch(op) {\n        case 'CREATE':\n          setManagerNotification(prev => ({...prev, message: task.title, title: \"Task Created\", type: \"success\", user: Number(loginToken) }))\n          break;\n        case 'EDIT':\n          setManagerNotification(prev => ({...prev, message: task.title, title: \"Task Updated\", type: \"success\", user: Number(loginToken) }))\n          break;\n        case 'DELETE':\n          setManagerNotification(prev => ({...prev, message: task.title, title: \"Task Deleted\", type: \"success\", user: Number(loginToken) }))\n          break;\n        case 'FEEDBACK':\n          setManagerNotification(prev => ({...prev, message: \"Submission Updated\", title: \"Feedback Sent\", type: \"success\", user: Number(loginToken) }))\n          break;\n        case 'MOVE':\n          setUserNotification(prev => ({...prev, message: task.title, user: Number(loginToken), title: \"Task Moved\", type: \"success\"}))\n          break;\n        default:\n          return;\n      }\n    });\n\n    socket.on('submt/feedback', (result, userToAlert) => {\n      setUserNotification(prev => ({...prev, message: \"You have task updates\", user: userToAlert, title: \"Submission Updated\", type: \"info\"}))\n      setTasks(result.teamTasks);\n      setSubmissions(result.submissions);\n    });\n      \n    return () => {\n      socket.off('tasks update');\n      socket.off('tasks action saved');\n      socket.off('submit/feedback');\n    }\n  }, [socket]);\n\n  const CREATE = 'CREATE';\n  const EDIT   = 'EDIT';\n  const DELETE = 'DELETE';\n\n  const moveTask = (taskItem, STATUS) => {\n    socket.emit('move task', taskItem, STATUS);\n  }\n\n  const createTaskItem = taskItem => {\n    socket.emit('tasks update', taskItem, CREATE);\n  };\n\n  const editTaskItem = taskItem => {\n    socket.emit('tasks update', taskItem, EDIT);\n  };\n\n  const deleteTaskItem = taskItem => {\n    socket.emit('tasks update', taskItem, DELETE);\n  };\n\n  const submitTaskItem = taskItem => {\n    const toSubmit = {...taskItem, status: TASK_STATUS.IN_REVIEW}\n    const submitTaskData = {\n      submission: {\n        feedback_string: '', \n        submission_date: new Date().toISOString(), \n        task_id: taskItem.id\n      },\n      taskItem: toSubmit\n    }\n    socket.emit('employee submit', submitTaskData, 1);\n  };\n\n  const giveFeedback = (message, task, accepted) => {\n    const ACCEPTED = 'accepted';\n    const REJECTED = 'rejected';\n\n    const submission = findSubmissionByTask(submissions, task.id);\n    const feedback = {\n      ...submission,\n      feedback_string: message,\n      status: accepted ? ACCEPTED : REJECTED\n    }\n    const taskItem = {\n      ...task,\n      status: accepted ? 3 : 1\n    }\n\n    socket.emit('feedback', {feedback, taskItem}, taskItem.employee_id);\n  }\n\n  return {\n    moveTask,\n    createTaskItem,\n    editTaskItem,\n    deleteTaskItem,\n    submitTaskItem,\n    giveFeedback,\n  };\n}\n","export default function findSubmissionByTask(submissions, tid) {\n  const PENDING  = 'pending';\n  return submissions.find(submission => {\n    return submission.task_id === tid \n      && submission.status === PENDING;\n  });\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}